openapi: 3.0.3
info:
  description: Domotics API
  title: Domotics api
  version: 1.2.0
servers:
- url: http://rpi1bplus/api/v1
security:
- apiKeyAuth: []
tags:
- name: Site
- name: Device
- name: User
- name: SensorValue
paths:
  /site:
    post:
      operationId: addSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: Site saved
      summary: Add a new site
      tags:
      - Site
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Site
    get:
      operationId: getSites
      description: Get all sites
      tags:
      - Site
      responses:
         "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: Sites

  /site/{siteId}:
    get:
      operationId: getSite
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: Site content
      summary: Get a site
      tags:
      - Site
      x-accepts: application/json
      x-tags:
      - tag: Site
    put:
      operationId: updateSite
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: Site
      summary: Update a site
      tags:
      - Site
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Site
  /site/{siteId}/devices:
    get:
      operationId: getSiteDevices
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: Devices
      summary: Get all devices of a site
      tags:
      - Device
      x-accepts: application/json
      x-tags:
      - tag: Device
    post:
      operationId: addDevices
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Device'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: Device is updated
      summary: Add devices to a site
      tags:
      - Device
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Device
  /site/{siteId}/devices/{deviceId}:
    get:
      operationId: getDevice
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The device identification
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: Device content
      summary: Get a device
      tags:
      - Device
      x-accepts: application/json
      x-tags:
      - tag: Device
    put:
      operationId: updateDevice
      parameters:
      - description: site identification
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The device identification
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: object
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: Device is updated
      summary: Update a device configuration
      tags:
      - Device
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Device
  /user:
    post:
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User saved
      summary: Add a new User
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /user/{userId}:
    get:
      operationId: getUser
      parameters:
      - description: user identification
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User content
      summary: Get a user
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
    put:
      operationId: updateUser
      parameters:
      - description: user identification
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: User content
      summary: Update a user
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: User
  /sensor-values:
    get:
      operationId: getSensorValues
      parameters:
      - name: sensorIds
        description: Ids of the sensors for which sensor values are requested
        explode: true
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
        style: form
      - name: start
        description: Start time of the requested period of Sensor Values
        explode: true
        in: query
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - name: end
        description: End time of the requested period of Sensor Values
        explode: true
        in: query
        allowEmptyValue: true
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - name: sampling_factor
        description: The sampling factor, taking a sample every x values
        explode: true
        in: query
        allowEmptyValue: true
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Sensor values retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorValueListResponse'
        "204":
          description: No sensor values were found
      summary: Get sensor values
      tags:
      - SensorValue
      x-accepts: application/json
      x-tags:
      - tag: SensorValue
  /sensor-values/graph:
    get:
      operationId: getSensorValueGraphData
      parameters:
        - name: sensorIds
          description: Ids of the sensors for which graph data is requested
          explode: true
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
          style: form
        - name: start
          description: Start time of the requested period of Sensor Values
          explode: true
          in: query
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - name: end
          description: End time of the requested period of Sensor Values
          explode: true
          in: query
          allowEmptyValue: true
          required: true
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          description: Sensor values retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorValueGraphResponse'
        "204":
          description: No sensor values were found
      summary: Get sensor value graph data
      tags:
        - SensorGraphData
      x-accepts: application/json
      x-tags:
        - tag: SensorGraphData
components:
  parameters:
    PaginationOffsetParam:
      in: query
      name: page-number
      required: false
      schema:
        type: integer
        minimum: 0
      description: The page number to request for the paginated set of items.
      example: 0
    PaginationLimitParam:
      in: query
      name: page-size
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 500
      description: The maximum number of items to return.
      example: 20
  schemas:
    Id:
      description: unique identification
      format: int64
      readOnly: true
      type: integer
    User:
      description: A user of the site
      example:
        dtRegistered: 2000-01-23T04:56:07.000+00:00
        password: password
        role:
          permissions:
          - null
          - null
          id: 1
        email-address: email-address
        id: 1
        status: ACTIVE
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        role:
          $ref: '#/components/schemas/Role'
        password:
          format: password
          type: string
        email-address:
          type: string
        dtRegistered:
          format: date-time
          type: string
        status:
          description: "User status; active, locked (for security reasons), registered\
            \ (not active)"
          enum:
          - ACTIVE
          - LOCKED
          - REGISTERED
          type: string
          x-enumNames:
          - ACTIVE
          - LOCKED
          - REGISTERED
    Site:
      example:
        dtCreated: 2000-01-23T04:56:07.000+00:00
        devices:
        - macAddress: macAddress
          serialConfig:
            baudRate: 9
            parity: ODD
            databits: 7
            serialPort: serialPort
            id: 7
            flowControl: XON_XOFF  // SW flow control
          sensors:
          - name: name
            description: description
            id: 2
            mqttTopic:
              path: path
              id: 2
            type: null
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          - name: name
            description: description
            id: 2
            mqttTopic:
              path: path
              id: 2
            type: null
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          actuators:
          - name: name
            description: description
            id: 7
            mqttTopic:
              path: path
              id: 2
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          - name: name
            description: description
            id: 7
            mqttTopic:
              path: path
              id: 2
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          modelId: modelId
          manufacturerId: manufacturerId
          hardwareVersion: hardwareVersion
          id: 6
          firmwareVersion: firmwareVersion
          parameters:
            repeatValuesAfter: 60
            internalQueueSize: 10000
          mqttConfig:
            clientId: 5.962133916683182
            topics:
            - path: path
              id: 2
            - path: path
              id: 2
            id: 1
            userId: 5.637376656633329
            url: url
        - macAddress: macAddress
          serialConfig:
            baudRate: 9
            parity: ODD
            databits: 7
            serialPort: serialPort
            id: 7
            flowControl: XON_XOFF  // SW flow control
          sensors:
          - name: name
            description: description
            id: 2
            mqttTopic:
              path: path
              id: 2
            type: null
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          - name: name
            description: description
            id: 2
            mqttTopic:
              path: path
              id: 2
            type: null
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          actuators:
          - name: name
            description: description
            id: 7
            mqttTopic:
              path: path
              id: 2
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          - name: name
            description: description
            id: 7
            mqttTopic:
              path: path
              id: 2
            parameters:
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
            - parameterType: String
              readonly: false
              name: name
              id: 4
              value: "{}"
          modelId: modelId
          manufacturerId: manufacturerId
          hardwareVersion: hardwareVersion
          id: 6
          firmwareVersion: firmwareVersion
          parameters:
            repeatValuesAfter: 60
            internalQueueSize: 10000
          mqttConfig:
            clientId: 5.962133916683182
            topics:
            - path: path
              id: 2
            - path: path
              id: 2
            id: 1
            userId: 5.637376656633329
            url: url
        name: name
        siteId: 0
        description: description
        users:
        - dtRegistered: 2000-01-23T04:56:07.000+00:00
          password: password
          role:
            permissions:
            - null
            - null
            id: 1
          email-address: email-address
          id: 1
          status: ACTIVE
        - dtRegistered: 2000-01-23T04:56:07.000+00:00
          password: password
          role:
            permissions:
            - null
            - null
            id: 1
          email-address: email-address
          id: 1
          status: ACTIVE
        mqttConfig:
          clientId: 5.962133916683182
          topics:
          - path: path
            id: 2
          - path: path
            id: 2
          id: 1
          userId: 5.637376656633329
          url: url
      properties:
        siteId:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        name:
          type: string
        description:
          type: string
        dtCreated:
          format: date-time
          type: string
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
        mqttConfig:
          $ref: '#/components/schemas/MqttConfig'
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    Role:
      example:
        permissions:
        - null
        - null
        id: 1
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    Permission:
      description: "User permission; admin (all), update (read + write), read (no\
        \ write)"
      enum:
      - ADMIN
      - UPDATE
      - READ
      type: string
      x-enumNames:
      - ADMIN
      - UPDATE
      - READ
    Device:
      description: A device can have multiple sensors and/or actuators
      example:
        macAddress: macAddress
        serialConfig:
          baudRate: 9
          parity: ODD
          databits: 7
          serialPort: serialPort
          id: 7
          flowControl: XON_XOFF  // SW flow control
        sensors:
        - name: name
          description: description
          id: 2
          mqttTopic:
            path: path
            id: 2
          type: null
          parameters:
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
        - name: name
          description: description
          id: 2
          mqttTopic:
            path: path
            id: 2
          type: null
          parameters:
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
        actuators:
        - name: name
          description: description
          id: 7
          mqttTopic:
            path: path
            id: 2
          parameters:
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
        - name: name
          description: description
          id: 7
          mqttTopic:
            path: path
            id: 2
          parameters:
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
          - parameterType: String
            readonly: false
            name: name
            id: 4
            value: "{}"
        modelId: modelId
        manufacturerId: manufacturerId
        hardwareVersion: hardwareVersion
        id: 6
        firmwareVersion: firmwareVersion
        parameters:
          repeatValuesAfter: 60
          internalQueueSize: 10000
        mqttConfig:
          clientId: 5.962133916683182
          topics:
          - path: path
            id: 2
          - path: path
            id: 2
          id: 1
          userId: 5.637376656633329
          url: url
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        manufacturerId:
          description: "identification of the manufacturerId, may be in hex format"
          type: string
        modelId:
          description: The model id from the manufacturer
          type: string
        firmwareVersion:
          description: The currently running version of the firmware (major.minor.fix.build)
          type: string
        hardwareVersion:
          description: The hardware version as printed on the PCB or advertised through
            other info
          type: string
        macAddress:
          description: The physical address of the device in hex format
          type: string
        mqttConfig:
          $ref: '#/components/schemas/MqttConfig'
        serialConfig:
          $ref: '#/components/schemas/SerialConfig'
        parameters:
          example:
            repeatValuesAfter: 60
            internalQueueSize: 10000
          items:
            $ref: '#/components/schemas/DomiotParameter'
          type: array
        sensors:
          items:
            $ref: '#/components/schemas/Sensor'
          type: array
        actuators:
          items:
            $ref: '#/components/schemas/Actuator'
          type: array
      type: object
    SerialConfig:
      description: The serial port configuration
      example:
        baudRate: 9
        parity: ODD
        databits: 7
        serialPort: serialPort
        id: 7
        flowControl: XON_XOFF  // SW flow control
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        serialPort:
          type: string
        baudRate:
          type: integer
        parity:
          enum:
          - ODD
          - EVEN
          type: string
        databits:
          default: 8
          maximum: 8
          minimum: 7
          type: integer
        flowControl:
          enum:
          - XON_XOFF  // SW flow control
          - RTS_CTS   // HW flow control
          type: string
      type: object
    Sensor:
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        type:
          $ref: '#/components/schemas/SensorType'
        name:
          type: string
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/DomiotParameter'
          type: array
        mqttTopic:
          $ref: '#/components/schemas/MqttTopic'
      type: object
      required:
        - id
        - type
        - mqttTopic
    DomiotParameter:
      example:
        parameterType: String
        readonly: false
        name: name
        id: 4
        value: "{}"
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        name:
          type: string
        parameterType:
          enum:
          - String
          - Number
          - Boolean
          type: string
        value:
          type: object
        readonly:
          default: false
          type: boolean
      type: object
    SensorType:
      description: Sensor types; the first entry is for making the first one start
        with ordinal 1
      enum:
      - NOT_USED
      - POWER_PT1
      - POWER_PT2
      - POWER_CT1
      - POWER_CT2
      - POWER_AC
      - POWER_AP
      - GAS_METER
      - TEMP
      - HUMID
      - WATER
      - GAS_SENSOR
      - HYDRO
      - STATUS
      - VOLTAGE_LEVEL
      - CURRENT_LEVEL
      type: string
    SensorValue:
      description: A sensor value correspondents to a measurement taken by a sensor
      required:
        - sensorId
        - timestamp
        - value
      properties:
        sensorId:
          $ref: '#/components/schemas/Id'
        timestamp:
          description: date-time of occurrence
          format: date-time
          type: string
        value:
          format: double
          type: number
      type: object
    SensorValueListResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: "#/components/schemas/SensorValueSeriesItem"
    SensorValueSeriesItem:
      title: List of Sensor Values
      type: object
      properties:
        total:
          description: The number of entries before sampling
          type: integer
          format: number
        min:
          description: The minimum value in the data set
          type: number
          format: double
        max:
          description: The maximum value in the data set
          type: number
          format: double
        samplingFactor:
          description: Data filtering by removing all except every x-th value
          type: integer
          format: int32
        sensor:
          $ref: '#/components/schemas/Sensor'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SensorValue'
    GraphMetadata:
      type: object
      description: A statistical reference for the graph data (min, max, total and sampling time)
      properties:
        total:
          description: The total number of data in the database
          type: integer
          format: int32
        samplingFactor:
          description: 0 and 1 means no sampling. Greater than 1 means dropping values so that only every {samplingFactor} seconds a value is present
          type: integer
          format: int32
        min:
          type: number
          format: double
        max:
          type: number
          format: double
    NameMinMaxMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GraphMetadata'
    NgxChartsData:
      description: Graphical sensor data
      properties:
        name:
          description: Label of the sensor value set
          type: string
        series:
          description: The value pairs
          type: array
          items:
            properties:
              name:
                type: string
              value:
                type: number
                format: double
    SensorValueGraphResponse:
      description: The return type of the webservice for processing graphical views of sensor data
      properties:
        metaData:
          $ref: "#/components/schemas/NameMinMaxMap"
        values:
          type: array
          items:
            $ref: "#/components/schemas/NgxChartsData"
    MqttConfig:
      description: Operational parameters for connecting to the MQTT broker
      example:
        clientId: '5.962133916683182'
        topics:
        - path: path
          id: 2
        - path: path
          id: 2
        id: 1
        userId: '5.637376656633329'
        url: url
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        clientId:
          description: The unique identification on the mqtt broker
          type: number
        userId:
          description: The user reference for logging into the mqtt broker
          type: number
        url:
          description: The url of the mqtt broker (tcp://localhost:1883)
          type: string
        topics:
          description: The configured topics for the mqtt broker
          items:
            $ref: '#/components/schemas/MqttTopic'
          type: array
    MqttTopic:
      description: The configured topics for the local mqtt broker
      example:
        path: path
        id: 2
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        path:
          description: the mqtt topic path e.g. home1/0/fusebox/p1/pact1
          type: string
      type: object
    Actuator:
      description: An actuator can operate devices. The P1 smart meter is an example
        of such a device
      example:
        name: name
        description: description
        id: 7
        mqttTopic:
          path: path
          id: 2
        parameters:
        - parameterType: String
          readonly: false
          name: name
          id: 4
          value: "{}"
        - parameterType: String
          readonly: false
          name: name
          id: 4
          value: "{}"
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        name:
          type: string
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/DomiotParameter'
          type: array
        mqttTopic:
          $ref: '#/components/schemas/MqttTopic'
      type: object
    Command:
      description: A command is an event to act on a sensor value or timer
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        predicateActionList:
          additionalProperties:
            $ref: '#/components/schemas/Command_predicateActionList_value'
          type: object
      type: object
    Command_predicateActionList_value_predicate_value:
      properties:
        parameter:
          description: The parameter that is to be inspected
          type: string
        value:
          description: "Relational specification of the parameter value ( using <,\
            \ >, ==, )"
          type: string
      type: object
    Command_predicateActionList_value_action:
      properties:
        id:
          description: unique identification
          format: int64
          readOnly: true
          type: integer
        delay:
          description: How many ms should be waited before executing the action
          type: integer
        actionCommand:
          description: "TODO: Should we put an mqtt command in here?"
          type: string
      type: object
    Command_predicateActionList_value:
      properties:
        predicate:
          additionalProperties:
            $ref: '#/components/schemas/Command_predicateActionList_value_predicate_value'
          type: object
        action:
          $ref: '#/components/schemas/Command_predicateActionList_value_action'
      type: object
    ListResponseMetaData:
      title: List response Meta Data
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: total
          example: 100
        page-number:
          type: integer
          format: int32
          description: page-number
          example: 15
        page-size:
          type: integer
          format: int32
          description: limit
          example: 20

  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    BearerAuth:
      bearerFormat: jwt
      scheme: bearer
      type: http
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
